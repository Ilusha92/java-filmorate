CREATE TABLE IF NOT EXISTS genre (
    genreId int PRIMARY KEY ,
    name varchar
);

CREATE TABLE IF NOT EXISTS mpa (
   mpaId int,
   name varchar
);

CREATE TABLE IF NOT EXISTS friendshipStatus (
    friendshipStatusId int PRIMARY KEY ,
    description varchar
);


CREATE TABLE IF NOT EXISTS directors (
     directorId int NOT NULL AUTO_INCREMENT PRIMARY KEY,
     directorName varchar
);
CREATE TABLE IF NOT EXISTS films (
    filmId INTEGER PRIMARY KEY,
    name varchar(200),
    description varchar,
    release_date date,
    duration int,
    mpaId int
);

CREATE TABLE IF NOT EXISTS users (
    userId INTEGER PRIMARY KEY,
    email varchar,
    login varchar,
    name varchar,
    birthdate date
);

CREATE TABLE IF NOT EXISTS film_genre (
    filmId int REFERENCES FILMS(filmId) ON DELETE CASCADE ,
    genreId int REFERENCES GENRE(genreId) ON DELETE CASCADE ,
    PRIMARY KEY (filmId, genreId)
);



CREATE TABLE IF NOT EXISTS likesList (
    filmId int REFERENCES FILMS(filmId) ON DELETE CASCADE ,
    userId int REFERENCES USERS(userId) ON DELETE CASCADE,
    PRIMARY KEY (filmId, userId)
);

CREATE TABLE IF NOT EXISTS friendship (
    userId int REFERENCES USERS(userId) ON DELETE CASCADE ,
    friendId int REFERENCES USERS(userId) ON DELETE CASCADE ,
    friendshipStatusId int REFERENCES FRIENDSHIPSTATUS(friendshipStatusId),
    PRIMARY KEY (userId, friendId)
);

CREATE TABLE IF NOT EXISTS review (
    review_id LONG PRIMARY KEY,
    content varchar NOT NULL CHECK (content <> ' '),
    isPositive boolean NOT NULL,
    user_id LONG REFERENCES users (userId),
    film_id LONG REFERENCES films (filmId),
    useful int
);

CREATE TABLE IF NOT EXISTS review_likes (
    id LONG GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_id LONG REFERENCES users (userId) ON DELETE CASCADE,
    review_id LONG REFERENCES review (review_id) ON DELETE CASCADE,
    isLike BOOLEAN NOT NULL
);



     CREATE TABLE IF NOT EXISTS directorFilm (
     directorFilmId int NOT NULL AUTO_INCREMENT PRIMARY KEY,
     filmId int REFERENCES FILMS(filmId) ON DELETE CASCADE ,
     directorId int REFERENCES DIRECTORS(DIRECTORID) ON DELETE CASCADE,
     CONSTRAINT filmDirectorFilm FOREIGN KEY (filmId) REFERENCES films (filmId),
     CONSTRAINT directorFilmDirector FOREIGN KEY (directorId) REFERENCES directors (directorId)
     );

CREATE TABLE IF NOT EXISTS events (
    timestamp long,
    userId int REFERENCES USERS(userId) ON DELETE CASCADE ,
    eventType varchar(6),
    operation varchar(6),
    eventId int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    entityId long
);